from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
from aiogram.types import Message, BotCommand
from dotenv import load_dotenv
import os

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –§—É–Ω–∫—Ü–∏—è ---

async def send_ids_for_copy(message: types.Message, main_file_id: str, file_type: str, thumb_file_id: str = None):
    response_text = f"ID {file_type}:\n`{main_file_id}`"

    if thumb_file_id:
        response_text += f"\n\nID –º–∏–Ω–∏–∞—Ç—é—Ä—ã:\n`{thumb_file_id}`"

    await message.answer(
        response_text,
        parse_mode="Markdown"
    )

# --- –•–µ–Ω–¥–ª–µ—Ä—ã –ö–æ–º–∞–Ω–¥ –∏ –ú–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ ---

@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µÃÅ—Ç—Å—Ç–≤—É—é!\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è ID —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –∏ –∏—Ö –º–∏–Ω–∏–∞—Ç—é—Ä –≤ Telegram.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç –ª—é–±–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤:\n\n"
        "      üì∏ –§–æ—Ç–æ\n"
        "      üìπ –í–∏–¥–µ–æ\n"
        "      üéµ –ê—É–¥–∏–æ\n"
        "      üìÑ –î–æ–∫—É–º–µ–Ω—Ç\n"
        "      üå† –°—Ç–∏–∫–µ—Ä\n"
        "      üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "      üé• –í–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "      üéá GIF-–∞–Ω–∏–º–∞—Ü–∏—é\n\n"
        "upd: –±–æ—Ç –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç –∏ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç –Ω–∏–∫–∞–∫–∏–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö. –ö–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ <a href='https://github.com/dclxvist/id-bot.git'>GitHub</a>.",
        parse_mode="HTML",
        disable_web_page_preview=True
    )

@dp.message(F.photo)
async def handle_photo(message: types.Message):
    main_file_id = message.photo[-1].file_id # –±–æ–ª—å—à–∞—è –≤–µ—Ä—Å–∏—è —Ñ–æ—Ç–æ
    thumb_file_id = message.photo[0].file_id # –º–∏–Ω–∏–∞—Ç—é—Ä–∞
    await send_ids_for_copy(message, main_file_id, "–∫–∞—Ä—Ç–∏–Ω–∫–∏", thumb_file_id)

@dp.message(F.audio)
async def handle_audio(message: types.Message):
    main_file_id = message.audio.file_id
    thumb_file_id = message.audio.thumbnail.file_id if message.audio.thumbnail else None
    await send_ids_for_copy(message, main_file_id, "–∞—É–¥–∏–æ", thumb_file_id)

@dp.message(F.document)
async def handle_document(message: types.Message):
    main_file_id = message.document.file_id
    thumb_file_id = message.document.thumbnail.file_id if message.document.thumbnail else None
    await send_ids_for_copy(message, main_file_id, "–¥–æ–∫—É–º–µ–Ω—Ç–∞", thumb_file_id)

@dp.message(F.video)
async def handle_video(message: types.Message):
    main_file_id = message.video.file_id
    thumb_file_id = message.video.thumbnail.file_id if message.video.thumbnail else None
    await send_ids_for_copy(message, main_file_id, "–≤–∏–¥–µ–æ", thumb_file_id)

@dp.message(F.animation)
async def handle_animation(message: types.Message):
    main_file_id = message.animation.file_id
    thumb_file_id = message.animation.thumbnail.file_id if message.animation.thumbnail else None
    await send_ids_for_copy(message, main_file_id, "–∞–Ω–∏–º–∞—Ü–∏–∏ (GIF)")

@dp.message(F.voice)
async def handle_voice(message: types.Message):
    main_file_id = message.voice.file_id
    await send_ids_for_copy(message, main_file_id, "–≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")

@dp.message(F.video_note)
async def handle_video_note(message: types.Message):
    main_file_id = message.video_note.file_id
    await send_ids_for_copy(message, main_file_id, "–≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è")

@dp.message(F.sticker)
async def handle_sticker(message: types.Message):
    main_file_id = message.sticker.file_id
    await send_ids_for_copy(message, main_file_id, "—Å—Ç–∏–∫–µ—Ä–∞")

# --- –ó–∞–ø—É—Å–∫ –ë–æ—Ç–∞ ---

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

    commands_for_bot = [
        BotCommand(command="start", description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"),
    ]
    await bot.set_my_commands(commands_for_bot)
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())